<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software Tools for Deployment on MLOps: Operationalizing Machine Learning</title>
    <link>https://chicagodatascience.github.io/MLOps/software-tools/</link>
    <description>Recent content in Software Tools for Deployment on MLOps: Operationalizing Machine Learning</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://chicagodatascience.github.io/MLOps/software-tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setting up Python</title>
      <link>https://chicagodatascience.github.io/MLOps/software-tools/conda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chicagodatascience.github.io/MLOps/software-tools/conda/</guid>
      <description>Here are a few notes on installing a user specific python distribution:
Get Miniconda wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh chmod +x Miniconda3-latest-Linux-x86_64.sh conda install pip #better to use the pip in the base conda env than system pip   The difference between conda and pip: pip is a package manager specifically for python, whereas conda is a package manager for multiple languages as well as is an environment manager. Python module venv is python specific environment manager.</description>
    </item>
    
    <item>
      <title>MLFlow</title>
      <link>https://chicagodatascience.github.io/MLOps/software-tools/mlflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chicagodatascience.github.io/MLOps/software-tools/mlflow/</guid>
      <description>See https://pypi.org/project/mlflow/</description>
    </item>
    
    <item>
      <title>Remote Jupyter Server</title>
      <link>https://chicagodatascience.github.io/MLOps/software-tools/jupyter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chicagodatascience.github.io/MLOps/software-tools/jupyter/</guid>
      <description>The following sets a simple password based login, which is handy:
jupyter notebook --generate-config jupyter notebook password  Unfortuantely, hashed password is sent unencrypted by your browser here. So read up here to do this in a better way.
Starting jupyter on the server can be done inside a screen session:
screen -S jupyter-session #can also use nohup or tmux here jupyter notebook --no-browser --port=8888  SSH tunnel can be setup by running the following on your local machine, and then opening the browser (http://localhost:8889)</description>
    </item>
    
    <item>
      <title>Python Datascience Landscape</title>
      <link>https://chicagodatascience.github.io/MLOps/software-tools/python-ds-landscape/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chicagodatascience.github.io/MLOps/software-tools/python-ds-landscape/</guid>
      <description>TBD</description>
    </item>
    
  </channel>
</rss>